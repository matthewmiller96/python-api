# Multi-stage build for complete shipping API platform
FROM node:18-alpine as frontend-build

# Build frontend
WORKDIR /frontend
COPY frontend/package*.json ./
RUN npm ci

COPY frontend/ ./
# Set the API URL for container network
ENV REACT_APP_API_BASE_URL=http://localhost:3000
RUN npm run build

# Python backend stage with nginx
FROM python:3.11-slim

# Install system dependencies including nginx
RUN apt-get update && apt-get install -y \
    gcc \
    nginx \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend code
COPY app/ ./app/

# Copy frontend build to nginx directory
COPY --from=frontend-build /frontend/build /var/www/html

# Configure nginx for frontend and API proxy
RUN echo 'server {\n\
    listen 80;\n\
    server_name localhost;\n\
    \n\
    # Serve frontend\n\
    location / {\n\
        root /var/www/html;\n\
        index index.html;\n\
        try_files $uri $uri/ /index.html;\n\
    }\n\
    \n\
    # Proxy API requests\n\
    location /api/ {\n\
        proxy_pass http://127.0.0.1:3000/;\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\
        proxy_set_header X-Forwarded-Proto $scheme;\n\
    }\n\
}' > /etc/nginx/sites-available/default

# Create startup script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Start nginx in background\n\
nginx &\n\
\n\
# Wait a moment for nginx to start\n\
sleep 2\n\
\n\
# Start FastAPI\n\
echo "Starting FastAPI backend..."\n\
exec uvicorn app.main:app --host 127.0.0.1 --port 3000\n\
' > /start.sh && chmod +x /start.sh

# Expose ports
EXPOSE 80 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Start both services
CMD ["/start.sh"]
